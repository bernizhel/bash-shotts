#! /usr/bin/env bash

PROGNAME=$(basename $0)
declare -r NUMBERS_REGEXP='^(((-?[[:digit:]]+)|(-?[[:digit:]]*\.[[:digit:]]+)) ?)'

usage() {
	cat <<- _EOF_
		Usage: $PROGNAME PRINCIPAL INTEREST MONTHS | -i | --interactive
	
		Where
	
		PRINCIPAL is the amount of the loan.
		INTEREST is the APR as a number (7% = 0.07).
		MONTHS is the length of the loan's term.
	
		Or use -i | --interactive flag to input the values in runtime.
	_EOF_
}

calculate() {
	bc <<- _EOF_
		scale = 10
		i = ${1} / 12
		p = ${2}
		n = ${3}
		a = p * ((i * ((1 + i) ^ n)) / (((1 + i) ^ n) - 1))
		print a, "\n"
	_EOF_
}

interactive=0

if [[ "$*" =~ ^-i|--interactive$ ]]; then
	interactive=1
elif [[ ! ( "$*" =~ ${NUMBERS_REGEXP}{3}$ ) ]]; then
	usage
	exit 1
fi

if [[ "$interactive" == 1 ]]; then
	while true; do
		read -p "Enter the principal > " principal
		if [[ ! ( "$principal" =~ ${NUMBERS_REGEXP}{1}$ ) ]]; then
			echo "Invalid principal." >& 2
			continue
		fi
	
		read -p "Enter the interest > " interest
		if [[ ! ( "$interest" =~ ${NUMBERS_REGEXP}{1}$ ) ]]; then
			echo "Invalid interest." >& 2
			continue
		fi

		read -p "Enter the number of months > " months
		if [[ ! ( "$months" =~ ${NUMBERS_REGEXP}{1}$ ) ]]; then
			echo "Invalid number of months." >& 2
			continue
		fi
		
		break
	done
else
	principal="$1"
	interest="$2"
	months="$3"
fi

printf "You need to pay \$%.2f monthly to pay back the loan in time.\n" $(calculate "$interest" "$principal" "$months")

